{"version":3,"sources":["components/styling/Concert.png","store.js","apiUrl.js","components/LandingPage.js","components/ResultsPage.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","StoreContext","createContext","initialState","results","page","lastPage","city","distance","localState","JSON","parse","localStorage","getItem","reducer","state","action","type","Object","objectSpread","payload","_embedded","events","totalPages","Error","Store","_ref","children","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","useEffect","setItem","stringify","react_default","a","createElement","Provider","value","TM_URL","process","REACT_APP_TM_URL","ITUNES_URL","REACT_APP_ITUNES_URL","library","add","faSearch","faMusic","faTicketAlt","LandingNavBar","className","SearchForm","withRouter","history","_useState","useState","_useState2","setCity","_useState3","_useState4","setDistance","_useContext","useContext","_useContext2","Form","onSubmit","e","preventDefault","trim","distNum","substr","length","fetch","concat","then","res","json","response","catch","err","console","error","message","fetchResults","push","Control","placeholder","onChange","target","name","as","Button","react_fontawesome_index_es","icon","size","LandingPage","LandingPage_LandingNavBar","alt","src","Concert","ResultsBar","react_router_dom","to","Result","props","_useState5","_useState6","audio","setAudio","_useState7","_useState8","setError","hdPic","pics","filter","pic","ratio","url","rawName","attractions","date","Date","year","getFullYear","month","getMonth","dt","getDate","newDate","title","venue","variant","href","tmLink","onClick","artist","artistURI","encodeURIComponent","controls","previewUrl","fetchAudio","Pagination","_useContext3","_useContext4","currentPage","lastButton","nextButton","ResultsPage","_useContext5","_useContext6","window","scrollTo","ResultsPage_ResultsBar","map","result","index","ResultsPage_Result","key","images","dates","start","localDate","venues","ResultsPage_Pagination","App","react_router","exact","path","component","ReactDOM","render","store","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.4fe273c9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Concert.7c44ccca.png\";","import React, { createContext, useReducer, useEffect } from 'react'\n\nexport const StoreContext = createContext({});\n\nconst initialState = {\n    results: [],\n    page: '',\n    lastPage: '',\n    city: '',\n    distance: ''\n}\n\nconst localState = JSON.parse(localStorage.getItem('state'))\n\nfunction reducer(state, action) {\n\n    switch (action.type) {\n        case 'FETCH_RESULTS':\n            return {...state, results: action.payload._embedded.events}\n        case 'SET_PAGE':\n            return {...state, page: 1}\n        case 'SET_LAST_PAGE':\n            return {...state, lastPage: action.payload.page.totalPages}\n        case 'SET_CITY':\n            return {...state, city: action.payload}\n        case 'SET_DISTANCE':\n            return {...state, distance: action.payload}\n        case 'NEXT_PAGE':\n            return {...state, page: action.payload}\n        case 'LAST_PAGE':\n            return {...state, page: action.payload}\n        default: \n            throw new Error('Action type must be defined')\n    }\n}\n\nconst Store = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, localState || initialState)\n\n    useEffect(() => {\n        localStorage.setItem('state', JSON.stringify(state))\n    }, [state])\n\n    return (\n        <StoreContext.Provider value={[state, dispatch]}>\n            {children}\n        </StoreContext.Provider>\n    )\n}\n\nexport default Store;\n\n","export const TM_URL = process.env.REACT_APP_TM_URL || 'https://app.ticketmaster.com/discovery/v2/events.json?apikey=p48FaIihgbRfceXm48vMgx9sScj9hrus&countryCode=US&classificationName=music&sort=date,asc&size=10'\nexport const ITUNES_URL = process.env.REACT_APP_ITUNES_URL || 'https://itunes.apple.com/search?term='","import React, { useState, useContext } from 'react'\nimport { StoreContext } from '../store'\nimport { withRouter } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { TM_URL } from '../apiUrl'\nimport './styling/css/landing.css'\nimport './styling/css/common.css'\nimport Concert from './styling/Concert.png'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch, faMusic, faTicketAlt } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faSearch, faMusic, faTicketAlt)\n\nconst LandingNavBar = () => (\n  // make a link\n  <div className='logo landing-logo'>ConSearch</div>\n)\n\nexport const SearchForm = withRouter(({ history }) => {\n  /* When city & distance inputs change, the hooks for city and distance change\n  their state. */\n\n  const [city, setCity] = useState('')\n  const [distance, setDistance] = useState('')\n  const [state, dispatch] = useContext(StoreContext)\n\n  // Fetch results from ticketMaster API and set it in context\n  const fetchResults = (city, distance) => {\n    fetch(`${TM_URL}&city=${city}&distance=${distance}`)\n      .then(res => res.json())\n      .then(response => {\n        // condense these\n        dispatch({ type: 'FETCH_RESULTS', payload: response })\n        dispatch({ type: 'SET_CITY', payload: city })\n        dispatch({ type: 'SET_DISTANCE', payload: distance })\n        dispatch({ type: 'SET_PAGE' })\n        dispatch({ type: 'SET_LAST_PAGE', payload: response })\n      })\n      .catch(err => console.error('ERROR:', err.message))\n  }\n\n  /* on submit of the form, the city and distance state are sent as query\n  parameters for the fetchResults function, redirect to results page */\n  const onSubmit = e => {\n    e.preventDefault()\n    if (city.trim() === '') return\n    let distNum = distance.substr(0, distance.length - 3)\n    fetchResults(city, distNum)\n    setCity('')\n    setDistance('Distance...')\n    history.push('/results')\n  }\n\n  return (\n    <Form className='search-form' onSubmit={onSubmit}>\n      <Form.Control\n        className='city-input input'\n        type='text'\n        placeholder='Enter a City...'\n        onChange={e => setCity(e.target.value)}\n        value={city}\n        name='city'\n      />\n      <Form.Control\n        className='dist-input input'\n        as='select'\n        onChange={e => setDistance(e.target.value)}\n        value={distance}\n        name='distance'\n        placeholder='Distance...'\n      >\n        <option>10 mi</option>\n        <option>25 mi</option>\n        <option>50 mi</option>\n        <option>75 mi</option>\n        <option>100 mi</option>\n      </Form.Control>\n\n      <Button className='landing-btn' type='submit'><FontAwesomeIcon icon='search' size='sm' /> Search</Button>\n    </Form>\n  )\n})\n\nconst LandingPage = () => (\n  <body className='landing-body'>\n    <LandingNavBar />\n    <div className='landing-content'>\n      <h1>Find Local Music</h1>\n      <h1>Wherever You Are</h1>\n      <p>\n        ConSearch helps you search for upcoming music events and lets you listen\n        to what will be playing at the event.\n      </p>\n      <SearchForm />\n    </div>\n    <img className='bgImage' alt='background' src={Concert} />\n  </body>\n)\n\nexport default LandingPage\n","import React, { useState, useContext, useEffect } from 'react'\nimport { StoreContext } from '../store'\nimport { TM_URL, ITUNES_URL } from '../apiUrl'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport './styling/css/results.css'\nimport './styling/css/common.css'\nimport './styling/css/grid.css'\n\n\n//nav bar with included search form\nconst ResultsBar = () => {\n  const [city, setCity] = useState('')\n  const [distance, setDistance] = useState('')\n  const [state, dispatch] = useContext(StoreContext)\n\n  const fetchResults = (city, distance) => {\n    fetch(`${TM_URL}&city=${city}&distance=${distance}`)\n      .then(res => res.json())\n      .then(response => {\n        dispatch({ type: 'FETCH_RESULTS', payload: response })\n        dispatch({ type: 'SET_CITY', payload: city })\n        dispatch({ type: 'SET_DISTANCE', payload: distance })\n        dispatch({ type: 'SET_PAGE' })\n      })\n      .catch(err => console.error('ERROR:', err))\n  }\n\n  //grab value from distance input and trim 'mi'\n  const onSubmit = e => {\n    e.preventDefault()\n    if (city.trim() === '') return\n    let distNum = distance.substr(0, distance.length - 3)\n    fetchResults(city, distNum)\n  }\n\n  return (\n    <nav>\n      <div className='logo nav-logo'>\n      <Link to='/'> ConSearch</Link>\n      </div>\n      <Form className='nav-form' onSubmit={onSubmit}>\n        <Form.Control\n         className='city-input input'\n          placeholder='Enter a city...'\n          onChange={e => setCity(e.target.value)}\n          value={city}\n          name='city'\n        />\n\n        <Form.Control\n          className='dist-input input'\n          as='select'\n          onChange={e => setDistance(e.target.value)}\n          value={distance}\n          name='distance'\n          placeholder='Distance...'\n        >\n          <option>10 mi</option>\n          <option>25 mi</option>\n          <option>50 mi</option>\n          <option>75 mi</option>\n          <option>100 mi</option>\n        </Form.Control>\n        <Button type='submit'>Search</Button>\n      </Form>\n    </nav>\n  )\n}\n\nconst Result = props => {\n  const [audio, setAudio] = useState('')\n  const [error, setError] = useState('')\n\n  //grab pic with same ratio for each artist, because list of pics isn't ordered\n  const hdPic = props.pics.filter(pic => pic.ratio === '4_3')[0].url\n  \n  //conditional rendering based on if json object has a particular property\n  const name = props.rawName.attractions\n    ? props.rawName.attractions[0].name\n    : ''\n\n  //format date\n  const date = new Date(props.date)\n  const year = date.getFullYear()\n  let month = date.getMonth()+1\n  let dt = date.getDate();\n  if (dt < 10) {\n    dt = '0' + dt\n  }\n  if (month < 10) {\n    month = '0' + month\n  }\n  const newDate = month+'/'+dt+'/'+year\n\n//  Search for artist on iTunes API\n//  if the artist exists, add a music sample,\n//  else display error message\n  const fetchAudio = artist => {\n    const artistURI = encodeURIComponent(artist)\n    fetch(`${ITUNES_URL}${artistURI}`)\n      .then(res => res.json())\n      .then(response => {\n        if (response.results.length < 1) {\n          throw new Error('Invalid Artist')\n        }\n        setError('')\n        setAudio(\n          <audio controls='controls' src={response.results[0].previewUrl} />\n        )\n      })\n      .catch(err => setError('Music Unavailable'))\n  }\n\n  return (\n    <div className='result-item'>\n      <div className='photo'>\n       <img src={hdPic} alt='artist' />\n      </div>\n        <div className='info'>\n          <div className='date'>{newDate}</div>\n          <div className='artist'>{props.title}</div>\n          <div className='venue'>@ {props.venue}</div>\n          <div className='audio-player'>{audio}</div>\n          <div className='error'>{error}</div>\n        </div>\n        <div className='buttons'>\n          <Button className='ticket-button' variant='danger' target='_blank' href={props.tmLink}>TICKETS</Button>\n          <Button\n            className='play-button'\n            variant='warning'\n            onClick={() => {\n              fetchAudio(name)\n            }}\n          >\n            PLAY\n          </Button>\n        </div>\n      </div>\n  )\n}\n\n\n//Handcoded pagination, after clicking next or last,\n//the page value is updated in store,\n//and new request is sent to TicketMasterAPI\nconst Pagination = () => {\n  const [state, dispatch] = useContext(StoreContext)\n  const currentPage = state.page\n\n  const lastPage = () => {\n    fetch(\n      `${TM_URL}&city=${state.city}&distance=${\n        state.distance\n      }&page=${currentPage - 1}`\n    )\n      .then(res => res.json())\n      .then(response => {\n        dispatch({ type: 'FETCH_RESULTS', payload: response })\n        dispatch({ type: 'LAST_PAGE', payload: currentPage - 1 })\n      })\n      .catch(err => console.error('ERROR:', err.message))\n  }\n  //If this is the last page of results, don't render the button\n  const nextPage = () => {\n    fetch(\n      `${TM_URL}&city=${state.city}&distance=${\n        state.distance\n      }&page=${currentPage + 1}`\n    )\n      .then(res => res.json())\n      .then(response => {\n        dispatch({ type: 'FETCH_RESULTS', payload: response })\n        dispatch({ type: 'NEXT_PAGE', payload: currentPage + 1 })\n      })\n      .catch(err => console.error('ERROR:', err.message))\n  }\n  //If this is the first page, don't render\n  const lastButton =\n    currentPage === 1 ? '' : <Button className='last' onClick={lastPage}>Last</Button>\n  const nextButton =\n    currentPage <= state.lastPage ? (\n      <Button className='next' onClick={nextPage}>Next</Button>\n    ) : (\n      ''\n    )\n\n  return (\n    <div className='button-container'>\n      {lastButton}\n      {nextButton}\n    </div>\n  )\n}\n\nconst ResultsPage = () => {\n  const [state, dispatch] = useContext(StoreContext)\n\n  //After hitting next or last page, page rerenders,\n  //and triggers useEffect to Scroll to top again\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  })\n\n  return (\n    <body className='results-body'>\n        <ResultsBar />\n          <section className='results'>\n          {state.results.map((result, index) => (\n            <Result\n              rawName={result._embedded}\n              key={index}\n              pics={result.images}\n              date={result.dates.start.localDate}\n              title={result.name}\n              venue={result._embedded.venues[0].name}\n              tmLink={result.url}\n            />\n            ))}\n            <Pagination />\n            </section>\n      </body>\n  )\n}\n\nexport default ResultsPage\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport LandingPage from './components/LandingPage'\nimport ResultsPage from './components/ResultsPage'\n\nfunction App () {\n  return (\n    <main className='App'>\n      <Router>\n        <Switch>\n          <Route exact path='/' component={LandingPage} />\n          <Route exact path='/results' component={ResultsPage} />\n        </Switch>\n      </Router>\n    </main>\n  )\n}\n\nexport default App\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Store from './store'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <Store>\n    <App />\n  </Store>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}